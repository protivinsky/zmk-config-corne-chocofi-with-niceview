/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
                        bindings = <
   &kp TAB   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
   &kp LCTRL &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
   &kp LSHFT &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp ESC
                  &kp LGUI &mo 1 &kp SPACE   &kp RET &mo 2 &kp RALT
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
// | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp TAB    &kp N1       &kp N2       &kp N3       &kp N4       &kp N5         &kp N6   &kp N7   &kp N8 &kp N9    &kp N0 &kp BSPC
   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans &trans
   &kp LSHFT  &trans       &trans       &trans       &trans       &trans         &trans   &trans   &trans &trans    &trans &trans
                          	        &kp LGUI     &trans       &kp SPACE      &kp RET  &trans   &kp RALT
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp  TAB  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &kp BSPC
   &kp LCTRL &trans   &trans &trans   &trans   &trans      &kp MINUS &kp EQUAL &kp LBKT        &kp RBKT &kp BSLH &kp GRAVE
   &kp LSHFT &trans   &trans &trans   &trans   &trans      &kp UNDER &kp PLUS  &kp LBRC        &kp RBRC &kp PIPE &kp TILDE
                    	     &kp LGUI &trans   &kp SPACE   &kp RET   &trans    &kp RALT
                        >;
                };
[_BASE] = LAYOUT(
    KC_Q,           KC_W,           KC_F,           KC_P,           KC_B,           KC_J,           KC_L,           KC_U,           KC_Y,           KC_QUOT,
    LGUI_T(KC_A),   LALT_T(KC_R),   LCTL_T(KC_S),   LSFT_T(KC_T),   RALT_T(KC_G),   RALT_T(KC_M),   LSFT_T(KC_N),   LCTL_T(KC_E),   LALT_T(KC_I),   LGUI_T(KC_O),
    LCTL_T(KC_Z),   RALT_T(KC_X),   KC_C,           KC_D,           KC_V,           KC_K,           KC_H,           KC_COMM,        RALT_T(KC_DOT), LT(_FUN,KC_SLSH),
                                                    LT(_SYM,KC_TAB),LT(_NUM,KC_SPC),LT(_NAV,KC_BSPC),LT(_MEDIA,KC_ENT)
),

[_NAV] = LAYOUT(
    XXXXXXX,        XXXXXXX,        XXXXXXX,        XXXXXXX,        XXXXXXX,        KC_INS,         KC_HOME,        KC_PGDN,        KC_PGUP,        KC_END,
    KC_LGUI,        KC_LALT,        KC_LCTL,        KC_LSFT,        XXXXXXX,        KC_ESC,         KC_LEFT,        KC_DOWN,        KC_UP,          KC_RGHT,
    XXXXXXX,        XXXXXXX,        XXXXXXX,        XXXXXXX,        XXXXXXX,        KC_DEL,         CW_TOGG,        KC_PSCR,        KC_SCRL,        KC_PAUS,
                                                    KC_TAB,         KC_SPC,         XXXXXXX,        XXXXXXX
),

[_MEDIA] = LAYOUT(
    XXXXXXX,        XXXXXXX,        XXXXXXX,        XXXXXXX,        XXXXXXX,        RGB_TOG,        RGB_MOD,        RGB_HUI,        RGB_SAI,        RGB_VAI,
    KC_LGUI,        KC_LALT,        KC_LCTL,        KC_LSFT,        XXXXXXX,        KC_MUTE,        KC_MPRV,        KC_VOLD,        KC_VOLU,        KC_MNXT,
    XXXXXXX,        XXXXXXX,        XXXXXXX,        XXXXXXX,        XXXXXXX,        KC_MPLY,        KC_MSTP,        XXXXXXX,        XXXXXXX,        XXXXXXX,
                                                    KC_MUTE,        KC_MPLY,        XXXXXXX,        XXXXXXX
),

[_NUM] = LAYOUT(
    KC_GRV,         KC_7,           KC_8,           KC_9,           KC_0,           XXXXXXX,        XXXXXXX,        XXXXXXX,        XXXXXXX,        XXXXXXX,
    KC_SCLN,        KC_4,           KC_5,           KC_6,           KC_MINS,        XXXXXXX,        KC_LSFT,        KC_LCTL,        KC_LALT,        KC_LGUI,
    KC_BSLS,        KC_1,           KC_2,           KC_3,           KC_EQL,         XXXXXXX,        XXXXXXX,        XXXXXXX,        XXXXXXX,        XXXXXXX,
                                                    XXXXXXX,        XXXXXXX,        KC_LBRC,        KC_RBRC
),

[_SYM] = LAYOUT(
    KC_TILD,        KC_AMPR,        KC_ASTR,        KC_LPRN,        KC_RPRN,        XXXXXXX,        XXXXXXX,        XXXXXXX,        XXXXXXX,        XXXXXXX,
    KC_COLN,        KC_DLR,         KC_PERC,        KC_CIRC,        KC_UNDS,        XXXXXXX,        KC_LSFT,        KC_LCTL,        KC_LALT,        KC_LGUI,
    KC_PIPE,        KC_EXLM,        KC_AT,          KC_HASH,        KC_PLUS,        XXXXXXX,        XXXXXXX,        XXXXXXX,        XXXXXXX,        XXXXXXX,
                                                    XXXXXXX,        XXXXXXX,        KC_LCBR,        KC_RCBR
),

[_FUN] = LAYOUT(
    XXXXXXX,        XXXXXXX,        XXXXXXX,        XXXXXXX,        XXXXXXX,        KC_F1,          KC_F2,          KC_F3,          KC_F4,          XXXXXXX,
    KC_LGUI,        KC_LALT,        KC_LCTL,        KC_LSFT,        XXXXXXX,        KC_F5,          KC_F6,          KC_F7,          KC_F8,          XXXXXXX,
    XXXXXXX,        XXXXXXX,        XXXXXXX,        XXXXXXX,        XXXXXXX,        KC_F9,          KC_F10,         KC_F11,         KC_F12,         XXXXXXX,
                                                    KC_TAB,         KC_SPC,         KC_BSPC,        KC_ENT
)
        };
};
